{"version":3,"file":"static/preview.306a78581806fb9da2f3.bundle.js","sources":["webpack:///./components/Button/README.md"],"sourcesContent":["module.exports = \"# Button\\n\\n### Usage\\n\\n```js\\nimport Button from 'components/button';\\n```\\n\\n<!-- STORY -->\\n\\n### Properties\\n\\n* `onClick` - click callback\\n* `label` - button text\\n\\n| propName | propType | defaultValue | isRequired |\\n| -------- | -------- | ------------ | ---------- |\\n| onClick  | func     | -            |            |\\n| label    | string   | -            | +          |\\n| alert    | boolean  | false        | -          |\\n| success  | boolean  | false        | -          |\\n\\n### Roadmap\\n\\n#### Icons\\n\\n```js\\nimport Button from 'components/button';\\n\\nrender() {\\n  return (\\n    <Button icon=\\\"mail\\\">Send mail</Button>\\n    <Button icon=\\\"trash\\\" iconPosition=\\\"right\\\">Remove</Button>\\n  );\\n}\\n```\\n\\n#### Value\\n\\nAdd `value` property that will be available at all event callback. Helps to prevent numbers of bind usage\\n\\nFor example:\\n\\n```js\\n<ListItem key={item.id}>\\n  <Button onClick={this.remove} value={item.id}>\\n    Remove\\n  </Button>\\n</ListItem>\\n```\\n\\nInstead of\\n\\n```js\\n<ListItem key={item.id}>\\n  <Button onClick={this.remove.bind(this, item.id)}>Remove</Button>\\n</ListItem>\\n```\\n\""],"mappings":"AAAA","sourceRoot":""}